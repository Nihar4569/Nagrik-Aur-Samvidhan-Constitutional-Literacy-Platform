<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>NAGRIK AUR SAMVIDHAN</title>
    <style>
      body {
  font-family: Arial, sans-serif;
  margin: 0;
  padding: 0;
  background-color: #e6f2f5;
}
.nav {
        background-color: transparent;
        display: flex;
        padding: 10px;
        border: none;
        font-size: 15px;
        padding-top: 20px;
        width: 100%;
        justify-content: center;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
        margin-bottom: 10px;
      }
      .nav div {
        margin: 20px;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 4px 8px;
        border-radius: 30%;
        position: relative;
        overflow: hidden;
      }

      .nav div a {
        text-decoration: none;
        color: #333;
        font-size: 20px;
      }
      .nav div ::after {
        content: "";
        display: block;
        height: 4px;
        width: 100%;
        background-color: brown;
        transform: scaleX(0);
        transform-origin: left;
        transition: transform 0.3s ease;
      }
      .nav div a:hover::after {
        transform: scaleX(1);
      }
.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 20px;
  position: relative;
}
.view-all-parts {
  background-color: #404978;
  color: white;
  padding: 10px 20px;
  font-size: 14px;
  font-weight: bold;
  border: none;
  cursor: pointer;
  position: absolute;
  top: 0;
  left: 0;
  z-index: 10;
}
.view-all-parts::before {
  content: "≡";
  margin-right: 10px;
}
.content {
  display: flex;
  align-items: flex-start;
  margin-top: 60px;
}
.part-number {
  font-size: 120px;
  font-weight: bold;
  color: #404978;
  line-height: 0.8;
  margin-right: 20px;
  position: relative;
  height: 250px;
}
.part-number img {
  height: 100%;
}
.part-number::before {
  content: "PART";
  font-size: 16px;
  position: absolute;
  top: 0;
  left: 0;
  transform: rotate(-90deg) translate(-100%, -100%);
  transform-origin: top left;
}
.part-number .pink-part {
  color: #f8d0d8;
}
.icon {
  width: 30px;
  height: 30px;
  background-color: #f8d0d8;
  border-radius: 50%;
  position: absolute;
}
.icon-top {
  top: -20px;
  right: -20px;
}
.icon-bottom {
  bottom: -10px;
  left: -10px;
}
.text-content {
  flex-grow: 1;
}
h2 {
  color: #404978;
  font-size: 16px;
  margin: 0 0 10px;
}
h1 {
  color: #404978;
  font-size: 48px;
  margin: 0 0 20px;
  font-weight: normal;
}
p {
  color: #404978;
  font-size: 18px;
  line-height: 1.5;
  margin: 0 0 20px;
}
.read-more {
  color: #404978;
  text-decoration: none;
  font-weight: bold;
}
.read-more::after {
  content: "↓";
  margin-left: 5px;
}
.navigation-menu {
  position: fixed;
  top: 0;
  left: -300px;
  width: 300px;
  height: 100%;
  background-color: #404978;
  transition: left 0.3s ease-in-out;
  z-index: 1000;
  overflow-y: auto;
}
.navigation-menu.active {
  left: 0;
}
.navigation-menu ul {
  list-style-type: none;
  padding: 20px;
  margin: 0;
}
.navigation-menu ul li {
  margin-bottom: 10px;
}
.navigation-menu ul li a {
  color: white;
  text-decoration: none;
  font-size: 16px;
  display: block;
  padding: 10px;
  border-radius: 5px;
  transition: background-color 0.2s;
}
.navigation-menu ul li a:hover {
  background-color: rgba(255, 255, 255, 0.1);
}
.article-range {
  text-align: center;
  color: #666;
  font-weight: normal;
  font-size: 24px;
  margin-bottom: 30px;
}
.article-list {
  border-collapse: collapse;
  width: 100%;
}
.article-list td {
  padding: 15px 10px;
  border-bottom: 1px solid #e0e0e0;
  vertical-align: top;
}
.article-list tr:last-child td {
  border-bottom: none;
}
.category {
  font-weight: bold;
  color: #444;
  width: 30%;
}
.articles {
  width: 70%;
}
.article {
  margin-top: 15px;
}
.article:last-child {
  margin-bottom: 0;
}
.seccontainer {
  background-color: rgb(224, 240, 224);
  height: 500px;
  display: flex;
  justify-content: center;
}
.seccontainer div {
  padding-top: 20px;
}
.navigation-container {
  display: flex;
  justify-content: space-between;
  padding: 10px;
  background-color: #e0f0e0;
}

.nav-button {
  width: 40px;
  height: 40px;
  border: 2px solid #666;
  background-color: transparent;
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  transition: background-color 0.3s;
}

.nav-button:hover {
  background-color: #d0e0d0;
}

.arrow {
  font-size: 20px;
  color: #666;
}
.seccontainer {
  margin-top: 100px;
}
.seccontainer div {
  padding: 30px;
}
.container {
  text-align: center;
}

h1 {
  color: #333;
  margin-bottom: 20px;
}

.state-item {
  display: inline-block;
  margin: 10px;
  padding: 20px;
  border: 2px solid #0077cc;
  border-radius: 10px;
  background-color: white;
  width: 160px;
  height: 160px;
  cursor: pointer;
  transition: transform 0.3s ease;
}

.state-item:hover {
  transform: scale(1.1);
}

.text {
  margin-top: 10px;
  font-size: 18px;
  font-weight: bold;
}
.ar13 {
  height: 500px;
  background-color: #e6f7ff;
}
.ar13 h1 {
  padding: 30px;
  padding-left: 60px;
}
.ar13 p {
  text-align: center;
}
.ar13 div {
  display: inline;
  justify-content: space-between;
  margin: 40px;
}
.ar13 img {
  align-items: center;
  height: 200px;
  width: 200px;
  border-radius: 12px;
}
#chat-widget {
            position: fixed;
            bottom: 20px;
            left: 20px;
            z-index: 1000;
        }
        #chat-container {
            width: 300px;
            height: 400px;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 10px 20px rgba(0,0,0,0.1);
            background-color: #ffffff;
            display: flex;
            flex-direction: column;
            transition: all 0.3s ease;
            transform: scale(0);
            transform-origin: bottom left;
        }
        #chat-container.active {
            transform: scale(1);
        }
        #chat-header {
            background-color: #4a90e2;
            color: white;
            padding: 15px;
            font-size: 16px;
            font-weight: bold;
            cursor: pointer;
        }
        #chat-messages {
            flex-grow: 1;
            overflow-y: auto;
            padding: 15px;
            background-color: #f9f9f9;
        }
        #user-input-container {
            display: flex;
            align-items: center;
            padding: 10px;
            background-color: #ffffff;
            border-top: 1px solid #e0e0e0;
        }
        #user-input {
            flex-grow: 1;
            padding: 8px 12px;
            border: 1px solid #e0e0e0;
            border-radius: 20px;
            font-size: 14px;
            outline: none;
        }
        #send-button {
            background-color: #4a90e2;
            color: white;
            border: none;
            border-radius: 50%;
            width: 32px;
            height: 32px;
            margin-left: 8px;
            cursor: pointer;
            display: flex;
            justify-content: center;
            align-items: center;
        }
        #send-button svg {
            width: 16px;
            height: 16px;
            fill: currentColor;
        }
        .message {
            margin-bottom: 10px;
            padding: 8px 12px;
            border-radius: 18px;
            max-width: 80%;
            word-wrap: break-word;
        }
        .user {
            background-color: #4a90e2;
            color: white;
            align-self: flex-end;
            margin-left: auto;
        }
        .bot {
            background-color: #e9e9e9;
            color: #333;
        }
        #chat-toggle {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            background-color: #4a90e2;
            color: white;
            display: flex;
            justify-content: center;
            align-items: center;
            cursor: pointer;
            box-shadow: 0 2px 10px rgba(0,0,0,0.2);
        }
        #chat-toggle svg {
            width: 30px;
            height: 30px;
            fill: currentColor;
        }
        .commcont {
  background-color: #d0e0d0;
  padding: 30px;
}
.comment-cont {
  max-width: 800px;
  margin: 0 auto;
  background-color: #e6f7ff;
  border-radius: 20px;
  box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
  overflow: hidden;
  animation: fadeIn 0.5s ease-out;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.comment-section {
  margin-right: 30px;
  padding: 30px;
}

h2 {
  color: var(--primary-color);
  margin-bottom: 20px;
}

.comment-form {
  margin-bottom: 30px;
}

.comment-form textarea,
.comment-form input[type="email"] {
  width: 100%;
  padding: 15px;
  margin-right: 250px;
  border: 1px solid var(--light-gray);
  border-radius: var(--border-radius);
  font-size: 16px;
  transition: border-color 0.3s ease, box-shadow 0.3s ease;
}

.comment-form textarea {
  resize: vertical;
  min-height: 100px;
}

.comment-form input[type="email"] {
  height: 30px;
  width: 200px;
  border-radius: 20px;
  margin-top: 10px;
  text-align: center;
}

.comment-form textarea:focus,
.comment-form input[type="text"]:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 0 3px rgba(74, 144, 226, 0.1);
}

.comment-form button {
  background-color: var(--primary-color);
  color: white;
  border: none;
  height: 60px;
  width: 200px;
  border-radius: 20px;
  margin-top: 10px;
  text-align: center;
  cursor: pointer;
  font-size: 16px;
  transition: background-color 0.3s ease, transform 0.1s ease;
}

.comment-form button:hover {
  background-color: #3a7bc8;
}

.comment-form button:active {
  transform: scale(0.98);
}

.comment-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 10px;
}

    </style>
  </head>
  <body>
     <div class="nav">
      <div><a href="/">HOME</a></div>
      <div><a href="#article">LEARN</a></div>
      <div><a href="home">DASHBOARD</a></div>
      <div><a href="/auth/signin">LOGIN/SIGNUP</a></div>
    </div>
    <nav class="navigation-menu" id="navigationMenu">
      <ul>
        <li><a href="#part1">Right to Equality (Articles 14-18)</a></li>
        <li><a href="#part2">Right to Freedom (Articles 19-22)</a></li>
        <li>
          <a href="#part3">Right against Exploitation (Articles 23-24)</a>
        </li>
        <li>
          <a href="#part4">Right to Freedom of Religion (Articles 25-28)</a>
        </li>
        <li>
          <a href="#part5">Cultural and Educational Rights (Articles 29-30) </a>
        </li>
        <li>
          <a href="#part6">Right to Constitutional Remedies (Article 32)</a>
        </li>
        <li><a href="#part7">Saving of Laws (Articles 33-35)</a></li>
      </ul>
    </nav>
    <div class="container">
      <button class="view-all-parts" id="viewAllPartsBtn">
        VIEW ALL PARTS
      </button>
      <div class="content">
        <div class="part-number">
          <img src="./image/3.png" alt="" />
        </div>
        <div class="text-content">
          <h2>PART 3</h2>
          <h1>Fundamental Rights</h1>
          <h2>Definition And Legal Framework</h2>
          <p>
            Part III of the Constitution deal with Fundamental Rights. These
            are: Right to equality, including equality before law, prohibition
            of discrimination on grounds of religion, race, caste, sex or place
            of birth, and equality of opportunity in matters of employment.
          </p>
        </div>
      </div>
    </div>
    <div class="seccontainer">
      
        <div class="container">
        <h1>Article 12: Definition of "State"</h1>
        <div><p>Defines "the State" as including the Government and Parliament of India, the Government and the Legislature of each of the States, and all local or other authorities within the territory of India or under the control of the Government of India.</p></div>
        <div class="state-item" id="central-gov">
            <div class="text">Central Government</div>
        </div>
        <div class="state-item" id="state-gov">
            <div class="text">State Government</div>
        </div>
        <div class="state-item" id="local-authorities">
            <div class="text">Local Authorities</div>
        </div>
        <div class="state-item" id="other-authorities">
            <div class="text">Other Authorities</div>
        </div>
        
    </div>
    </div> 
     <div class="ar13">
      <h1>Article 13:Laws Inconsistent with Fundamental Rights </h1>
      <div>
        <p>
           Declares that any law that violates fundamental rights is void to the extent of the violation. It also introduces the concept of "judicial review," allowing the judiciary to declare laws unconstitutional.
        </p>
      </div>
      <div ><img src="https://firebasestorage.googleapis.com/v0/b/chatapp-dae72.appspot.com/o/techcoders%2FOIG3%20(2).jpgf3a4d56f-4ef0-4c09-bd31-a74e6e851f36?alt=media&token=57b0402b-15ed-41fa-bab7-f3af6d08cd20 alt="></div>
      <div>
        <img src="https://firebasestorage.googleapis.com/v0/b/chatapp-dae72.appspot.com/o/techcoders%2FOIG3.jpga912163b-2372-4c3a-96c7-e4916d6feeb6?alt=media&token=892de841-2170-4ffe-8bdf-adb7e53807d4" alt="">
      </div>
      <div>
        <img src="https://firebasestorage.googleapis.com/v0/b/chatapp-dae72.appspot.com/o/techcoders%2FOIG1.BGh0ECBo2yrhAWz.jpg95dac590-ecea-47cf-8be6-d42015f1c57a?alt=media&token=c8e9361a-0780-4e0e-9a1e-c544f7ac8470" alt="">
      </div>
      <div>
        <img src="https://firebasestorage.googleapis.com/v0/b/chatapp-dae72.appspot.com/o/techcoders%2FOIG2.jpga1d10668-0f84-4be0-9c5e-55607ff6ce87?alt=media&token=a8e23ed1-7a6c-4fe7-9491-98be5a71670d" alt="">
      </div>
      <div><img src="https://firebasestorage.googleapis.com/v0/b/chatapp-dae72.appspot.com/o/techcoders%2Fth%20(1).jpg37631a5f-d39e-460d-83af-220b11bdc66c?alt=media&token=0e8acfbc-6037-4009-9780-bee733d1d232" alt=""></div>
     </div>
     
    </div> 
    </div>
     <div id="chat-widget">
        <div id="chat-toggle">
            <svg viewBox="0 0 24 24">
                <path d="M20 2H4c-1.1 0-2 .9-2 2v18l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2z"/>
            </svg>
        </div>
        <div id="chat-container">
            <div id="chat-header">Chat Bot</div>
            <div id="chat-messages"></div>
            <div id="user-input-container">
                <input type="text" id="user-input" placeholder="Type your message...">
                <button id="send-button">
                    <svg viewBox="0 0 24 24">
                        <path d="M2.01 21L23 12 2.01 3 2 10l15 2-15 2z"/>
                    </svg>
                </button>
            </div>
        </div>
    </div>
<div class="commcont">
      <div class="comment-cont">
        <div class="comment-section">
            <h2>Comments</h2>
            <div class="comment-form">
                <textarea placeholder="Write your comment here..."></textarea>
                <input type="email" placeholder="Your Email-Id">
                <button type="submit">Post Comment</button>
            </div>
            </div>
      </div>  
    </div>
    <script >
      const viewAllPartsBtn = document.getElementById("viewAllPartsBtn");
const navigationMenu = document.getElementById("navigationMenu");

viewAllPartsBtn.addEventListener("click", () => {
  navigationMenu.classList.toggle("active");
});

// Close menu when clicking outside
document.addEventListener("click", (event) => {
  if (
    !navigationMenu.contains(event.target) &&
    event.target !== viewAllPartsBtn
  ) {
    navigationMenu.classList.remove("active");
  }
});

// Example function to load content (you would implement this to fetch and display the selected part)
function loadPart(partId) {
  // This is a placeholder function. In a real application, you would fetch the content for the selected part
  // and update the page accordingly.
  console.log(`Loading content for ${partId}`);
  // Update page content here
  navigationMenu.classList.remove("active");
}

// Add click event listeners to navigation links
document.querySelectorAll(".navigation-menu a").forEach((link) => {
  link.addEventListener("click", (e) => {
    e.preventDefault();
    const partId = e.target.getAttribute("href").substring(1);
    loadPart(partId);
  });
});
const prevButton = document.getElementById("prevButton");
const nextButton = document.getElementById("nextButton");
const elements = document.querySelectorAll(".navigable-element"); // Add this class to elements you want to navigate between
 const chatWidget = document.getElementById('chat-widget');
        const chatToggle = document.getElementById('chat-toggle');
        const chatContainer = document.getElementById('chat-container');
        const chatMessages = document.getElementById('chat-messages');
        const userInput = document.getElementById('user-input');
        const sendButton = document.getElementById('send-button');

        const botResponses = {
            "hello": "Hello! How may I assist you today?",
            "help": "I'm here to help! What would you like to know?",
            "bye": "Goodbye! Feel free to chat again if you have more questions.",
            "default": "I'm not sure about that. Can you please rephrase or ask something else?"
        };

        function addMessage(message, sender) {
            const messageElement = document.createElement('div');
            messageElement.classList.add('message', sender);
            messageElement.textContent = message;
            chatMessages.appendChild(messageElement);
            chatMessages.scrollTop = chatMessages.scrollHeight;
        }

        function getBotResponse(message) {
            message = message.toLowerCase();
            for (const key in botResponses) {
                if (message.includes(key)) {
                    return botResponses[key];
                }
            }
            return botResponses.default;
        }

        function sendMessage() {
            const message = userInput.value.trim();
            if (message) {
                addMessage(message, 'user');
                userInput.value = '';
                
                setTimeout(() => {
                    const botResponse = getBotResponse(message);
                    addMessage(botResponse, 'bot');
                }, 500);
            }
        }

        chatToggle.addEventListener('click', () => {
            chatContainer.classList.toggle('active');
        });

        userInput.addEventListener('keypress', function(event) {
            if (event.key === 'Enter') {
                sendMessage();
            }
        });

        sendButton.addEventListener('click', sendMessage);

        // Initial bot message
        addMessage("Hello! How can I help you today?", 'bot');
    </script>
  </body>
</html>
